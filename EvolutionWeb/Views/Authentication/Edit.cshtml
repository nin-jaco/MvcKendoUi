@model SimpleAccountManager.Core.Entity.User
@{
    ViewBag.Title = "Evolution";
}
@section HtmlHead{
    @Html.Partial("HeadScripts")
}

<h2>
    Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@if (Model == null)
{
    <h3>User not found</h3>
}
else
{
    using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
    <fieldset>
        <legend>User</legend>
        

        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Username, new { @readonly = "readonly", @class="depth" })
            @Html.ValidationMessageFor(model => model.Username)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        
        <div class="editor-label">
            <label for="NewPassword">New password</label>
        </div>
        <div class="editor-field">
            @Html.TextBox("NewPassword", new { @class="depth"})
            <a href="#" title="Generate a random password" id="generatepassword"><img src="@Url.Content("~/Content/Images/generate.png")" alt="generate password" /></a>
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.IsApproved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsApproved)
            @Html.ValidationMessageFor(model => model.IsApproved)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.IsLockedOut)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.IsLockedOut)
            @Html.ValidationMessageFor(model => model.IsLockedOut)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastActivityDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.LastActivityDate)
            @Html.ValidationMessageFor(model => model.LastActivityDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastLoginDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.LastLoginDate)
            @Html.ValidationMessageFor(model => model.LastLoginDate)
        </div>
        <p>
            <input type="submit" value="Save" class="modern" />
        </p>
    </fieldset>
    }
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $("#generatepassword").click(function () {
            var randomPassword = generatePassword();
            $("#NewPassword").val(randomPassword);
        });

        $('#Email').addClass('depth');
        $('#Comment').addClass('depth');
        $('#IsApproved').addClass('depth');
    });

    function generatePassword() {
        var characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        var password = "";

        for (x = 0; x <= 8; x++) {
            i = Math.floor(Math.random() * 62);
            password += characters.charAt(i);
        }

        return password;
    }
</script>